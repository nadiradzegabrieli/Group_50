#Bug And Debugging - როდესაც შეცდომა აღმოჩენილია კომპიუტერისთვის მიცემული ინსტრუქციების ერთობლიობაში, მას bug-ს უწოდებენ. კომპიუტერის ინსტრუქციების ერთობლიობაში შეცდომის პოვნის პროცესს ეწოდება debugging. 

#Text Value - ტექსტის მნიშვნელობა (ასევე უწოდებენ "STRING (STR)") არის Python-ის ძირითადი შინაარსის ტიპი. სხვა ტიპის კონტენტი მოიცავს რიცხვებს, თარიღებს, დროს და ლოგიკურ მნიშვნელობებს. როდესაც მონაცემები შედის სამუშაო ფურცელში, Python აკეთებს "best guess" შინაარსის ტიპზე და ავტომატურად აფორმებს მნიშვნელობას.

#Numerical Values - კომპიუტერულ მეცნიერებაში „რიცხობრივი მნიშვნელობა“ აღნიშნავს ციფრულ წარმოდგენას, რომელიც გამოიყენება სხვადასხვა მიზნებისთვის, როგორიცაა ელემენტების წვდომა მასივებში ან string - ში, დიდი რიცხვების გენერირება და მათი სხვადასხვა ფორმატში გადაქცევა.

#What Is Comm? - კომენტარი არის საშუალება რომლითაც ჩვენ შეგვიძლია ადამიანს ავუხსნათ სხვადასხვა ტიპის ცვლადი როგორ იქმნება და არამარტო ცვლადები,როგორ უნდა მივანიჭოთ ცვლადს სახელი და მნიშვნელობა,print რას აკეთებს და ა.შ


#math operations

#first is (+)

print( 203 + 26 )
print( 60 + 232 )
print( 972 + 67 )
print( 32023 + 23 )
print( 9532 + 59 )
print( 230 + 26 )
print( 630 + 232 )
print( 973 + 67 )
print( 3302 + 23 )
print( 395 + 59 )
print( 634 + 88 )
print( 837 + 88 )
print( 9734 + 636 )
print( 65 + 76)
print( 536 + 9 )

#end of (+)


#starting (-)

print( 768 - 45 )
print( 906 - 89 )
print( 769 - 71 )
print( 868 - 76 )
print( 5766 - 354 )
print( 4667 - 456 )
print( 8765 - 556 )
print( 4665 -235 )
print( 6768 - 678 )
print(7676 - 564) 
print( 78 - 45 )
print( 960 - 89 )
print( 796 - 71 )
print( 868 - 76 )
print( 5676 - 354 )


#end of (-)

#starting (*)

print( 886 * 4 )
print( 88 * 7)
print( 686 * 5 )
print( 64 * 4 )
print( 4583 * 77)
print( 555 * 555)
print( 48513 * 4 )
print( 686 * 6 )
print( 686 *3 )
print( 4586 * 6 )
print( 8686 * 4 )
print( 888 * 7)
print( 686 * 5 )
print( 648 * 4 )
print( 4853 * 77)

#end of (*)

#starting (/)

print( 32 / 8 )
print(21323 / 98)
print(78616 / 8)
print( 3163 / 7 )
print( 26316 / 3 )
print( 6316 / 7 )
print( 1639 / 3 )
print( 323 / 8)
print( 8651 / 3)
print( 775 / 8 )
print( 312 / 8 )
print(2323 / 98)
print(71866 / 8)
print( 3613 / 7 )
print( 21636 / 3 )

#end of (/)




